name: Docker
on:
  push:
    branches:
      - develop
    tags:
      - *
  pull_request:

env:
  IMAGE_NAME: odoo-template
  DOCKER_BUILDKIT: 1
  REGISTRY: docker.pkg.github.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Run tests
        run: cd odoo && docker build . --file Dockerfile

  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: cd odoo && docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=$REGISTRY/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "develop" ] && VERSION=latest

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Tag image
        run: |
          IMAGE_ID=$REGISTRY/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          docker pull $IMAGE_ID:latest
          docker tag $IMAGE_ID:latest $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

# Example of a deploy job to push to an AKS instance
#  deploy:
#    needs: push
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
#    steps:
#      - uses: actions/aks-set-context@v1
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
#          resource-group: '${{ secrets.AZURE_RESOURCE_GROUP }}'
#          cluster-name: '${{ secrets.AZURE_CLUSTER_NAME }}'
#        id: login
#
#      - name: Deploy image to the development environment
#        run: |
#          echo "Configure kubectl"
#          kubectl config set-context ${{ secrets.AZURE_CLUSTER_NAME }} --namespace odoo-dev
#
#          echo "Add secret to pull image from registry (GitHub Packages)"
#          kubectl delete secret github-packages --ignore-not-found
#          kubectl create secret docker-registry github-packages \
#              --docker-server=docker.pkg.github.com \
#              --docker-username=${{ secrets.REGISTRY_USERNAME }} \
#              --docker-password=${{ secrets.REGISTRY_PASSWORD }}
#
#          echo "Rollout the new image"
#          kubectl rollout restart deploy odoo
